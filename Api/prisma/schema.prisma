// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                  Int      @id @default(autoincrement())
  ra                  String   @unique
  nome                String
  senha               String
  serie               String
  pontuacao           Int      @default(0)
  desafiosCompletados Int      @default(0)
  criadoEm            DateTime @default(now())
  atualizadoEm        DateTime @updatedAt

  // Relações
  progressoCursos     ProgressoCurso[]

  @@map("usuarios")
}

model Video {
  id           Int      @id @default(autoincrement())
  titulo       String
  materia      String   // matematica, csn, csh, portugues
  categoria    String
  url          String
  descricao    String?
  duracao      Int
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@map("videos")
}

model Curso {
  id          Int       @id @default(autoincrement())
  titulo      String
  descricao   String?
  materia     String    // matematica, csn, csh, portugues
  categoria   String    // algebra, geometria, quimica, fisica, historia, geografia, gramatica, interpretacao
  nivel       String    // fundamental, medio, vestibular
  duracao     Int       // Duração total em horas
  imagem      String?
  ativo       Boolean   @default(true)
  criadoEm    DateTime  @default(now())
  atualizadoEm DateTime @updatedAt

  // Relações
  modulos     Modulo[]
  progressos  ProgressoCurso[]

  @@map("cursos")
}

model Modulo {
  id          Int      @id @default(autoincrement())
  titulo      String
  descricao   String?
  ordem       Int      // Ordem do módulo no curso
  duracao     Int      // Duração em minutos
  cursoId     Int
  criadoEm    DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  // Relações
  curso       Curso    @relation(fields: [cursoId], references: [id], onDelete: Cascade)
  aulas       Aula[]

  @@map("modulos")
}

model Aula {
  id          Int      @id @default(autoincrement())
  titulo      String
  descricao   String?
  tipo        String   // video, texto, quiz, exercicio
  conteudo    String?  // URL do vídeo, texto da aula, etc.
  duracao     Int      // Duração em minutos
  ordem       Int      // Ordem da aula no módulo
  moduloId    Int
  criadoEm    DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  // Relações
  modulo      Modulo   @relation(fields: [moduloId], references: [id], onDelete: Cascade)

  @@map("aulas")
}

model ProgressoCurso {
  id          Int       @id @default(autoincrement())
  usuarioId   Int
  cursoId     Int
  progresso   Float     @default(0) // Percentual de 0 a 100
  concluido   Boolean   @default(false)
  ultimaAula  Int?      // ID da última aula acessada
  criadoEm    DateTime  @default(now())
  atualizadoEm DateTime @updatedAt

  // Relações
  usuario     Usuario   @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  curso       Curso     @relation(fields: [cursoId], references: [id], onDelete: Cascade)

  @@unique([usuarioId, cursoId])

  @@map("progresso_cursos")
}
